import{_ as o,c as e,o as i,V as d}from"./chunks/framework.ZP3QiZ4B.js";const f=JSON.parse('{"title":"移動","description":"","frontmatter":{},"headers":[],"relativePath":"vim/motion.md","filePath":"vim/motion.md"}'),c={name:"vim/motion.md"},l=d('<h1 id="移動" tabindex="-1">移動 <a class="header-anchor" href="#移動" aria-label="Permalink to &quot;移動&quot;">​</a></h1><h2 id="常用指令" tabindex="-1">常用指令 <a class="header-anchor" href="#常用指令" aria-label="Permalink to &quot;常用指令&quot;">​</a></h2><h3 id="left-right-motion" tabindex="-1">Left-right motion <a class="header-anchor" href="#left-right-motion" aria-label="Permalink to &quot;Left-right motion&quot;">​</a></h3><ul><li><code>^</code> ：移動至第一個 non-blank 字元。</li><li><code>$</code> ：移動至此行的最後一個字元。</li><li><code>f{char}</code> ：向右移動至 <code>char</code> 位置。</li><li><code>F{char}</code> ：向左移動至 <code>char</code> 位置。</li><li><code>t{char}</code> ：向右移動至 <code>char</code> 位置的左一格。</li><li><code>T{char}</code> ：向左移動至 <code>char</code> 位置的右一格。</li><li><code>;</code> ：重複 <code>f</code> <code>t</code> <code>F</code> <code>T</code> 動作。</li><li><code>,</code> ：重複 <code>f</code> <code>t</code> <code>F</code> <code>T</code> 相反方向的動作。</li></ul><h3 id="up-down-motions" tabindex="-1">Up-down motions <a class="header-anchor" href="#up-down-motions" aria-label="Permalink to &quot;Up-down motions&quot;">​</a></h3><ul><li><code>G</code> ：移動至最後一行。</li><li><code>gg</code> ：移動至第一行。</li></ul><h3 id="word-motions" tabindex="-1">Word motions <a class="header-anchor" href="#word-motions" aria-label="Permalink to &quot;Word motions&quot;">​</a></h3><ul><li><code>w</code> ：向前至下個字的第一個字元位置。</li><li><code>W</code> ：向前至下個字段（以 non-blank 字元為界）的第一個字元位置。</li><li><code>e</code> ：向前至目前字的最後字元位置。</li><li><code>E</code> ：向前至目前字段的最後字元位置。</li><li><code>b</code> ：向後至下個字的第一個字元位置。</li><li><code>B</code> ：向後至下個字段（以 non-blank 字元為界）的第一個字元位置。</li><li><code>ge</code> ：向後至目前字的最後字元位置。</li><li><code>gE</code> ：向後至目前字段的最後字元位置。</li></ul><h3 id="jumps" tabindex="-1">Jumps <a class="header-anchor" href="#jumps" aria-label="Permalink to &quot;Jumps&quot;">​</a></h3><ul><li><code>Ctrl-O</code> ：跳至 jump list 的前一個位置。</li><li><code>Ctrl-I</code> ：跳至 jump list 的下一個位置。</li><li><code>:ju</code> ：輸出 jump list 。</li></ul><h3 id="various-motions" tabindex="-1">Various motions <a class="header-anchor" href="#various-motions" aria-label="Permalink to &quot;Various motions&quot;">​</a></h3><ul><li><code>%</code> ：跳至成對符號的下（上）一個。</li><li><code>[{</code> ：跳至上一個成對的 <code>{</code> 。</li><li><code>]}</code> ：跳至下一個成對的 <code>}</code> 。</li><li><code>[(</code> ：跳至上一個成對的 <code>(</code> 。</li><li><code>])</code> ：跳至下一個成對的 <code>)</code> 。</li><li><code>[m</code> ：跳至上一個方法的起始位置 。</li><li><code>]m</code> ：跳至下一個方法的起始位置 。</li><li><code>[M</code> ：跳至上一個方法的結束位置 。</li><li><code>]M</code> ：跳至下一個方法的結束位置 。</li></ul><h2 id="延伸閱讀" tabindex="-1">延伸閱讀 <a class="header-anchor" href="#延伸閱讀" aria-label="Permalink to &quot;延伸閱讀&quot;">​</a></h2><ul><li><a href="https://neovim.io/doc/user/motion.html" target="_blank" rel="noreferrer">Motion - Neovim docs</a></li></ul>',14),a=[l];function t(r,n,s,h,m,u){return i(),e("div",null,a)}const p=o(c,[["render",t]]);export{f as __pageData,p as default};
