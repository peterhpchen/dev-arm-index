import{_ as e,c as i,o as a,a as d}from"./app.4eb2f6eb.js";const f=JSON.parse('{"title":"貢獻指南","description":"","frontmatter":{},"headers":[{"level":2,"title":"文件格式","slug":"文件格式","link":"#文件格式","children":[{"level":3,"title":"設定檔","slug":"設定檔","link":"#設定檔","children":[]},{"level":3,"title":"速查表","slug":"速查表","link":"#速查表","children":[]},{"level":3,"title":"慣用方式","slug":"慣用方式","link":"#慣用方式","children":[]},{"level":3,"title":"延伸閱讀","slug":"延伸閱讀","link":"#延伸閱讀","children":[]}]},{"level":2,"title":"指令寫法","slug":"指令寫法","link":"#指令寫法","children":[]}],"relativePath":"guide/contributing.md"}'),l={name:"guide/contributing.md"},t=d('<h1 id="貢獻指南" tabindex="-1">貢獻指南 <a class="header-anchor" href="#貢獻指南" aria-hidden="true">#</a></h1><h2 id="文件格式" tabindex="-1">文件格式 <a class="header-anchor" href="#文件格式" aria-hidden="true">#</a></h2><h3 id="設定檔" tabindex="-1">設定檔 <a class="header-anchor" href="#設定檔" aria-hidden="true">#</a></h3><ul><li>用 <code>@include</code> 透過 <code>src</code> 中的原始程式庫載入。</li><li>使用 <code>details</code> 說明，並維持兩層結構，檔名作為第二層的名稱。</li></ul><h3 id="速查表" tabindex="-1">速查表 <a class="header-anchor" href="#速查表" aria-hidden="true">#</a></h3><ul><li>表中的指令說明格式為 <strong><code>&lt;指令&gt;</code> ： &lt;說明&gt; 。</strong> ，中間的冒號為全形，並且結尾為句號。</li><li>如果某些指令有特定的作用範圍，請接一般的指令說明後，並用 <code>tip</code> 在特定範圍的指令之前做說明。</li></ul><h3 id="慣用方式" tabindex="-1">慣用方式 <a class="header-anchor" href="#慣用方式" aria-hidden="true">#</a></h3><p>用條列式的方式說明平常的使用習慣。</p><h3 id="延伸閱讀" tabindex="-1">延伸閱讀 <a class="header-anchor" href="#延伸閱讀" aria-hidden="true">#</a></h3><ul><li>名稱使用 <code>|</code> 區隔題目與站名，如果該網站為多層結構，由題目開始，由小至大填入，中間都用 <code>|</code> 隔開。</li></ul><h2 id="指令寫法" tabindex="-1">指令寫法 <a class="header-anchor" href="#指令寫法" aria-hidden="true">#</a></h2><ul><li>變數使用 <code>&lt;</code> 與 <code>&gt;</code> 夾住。</li><li>可選項目使用 <code>[</code> 與 <code>]</code> 包住。</li></ul>',12),c=[t];function r(n,o,h,s,u,_){return a(),i("div",null,c)}const p=e(l,[["render",r]]);export{f as __pageData,p as default};
