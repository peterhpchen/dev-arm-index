import{_ as e,c as t,o as r,V as a}from"./chunks/framework.ZP3QiZ4B.js";const m=JSON.parse('{"title":"Registers","description":"","frontmatter":{},"headers":[],"relativePath":"vim/register.md","filePath":"vim/register.md"}'),o={name:"vim/register.md"},i=a('<h1 id="registers" tabindex="-1">Registers <a class="header-anchor" href="#registers" aria-label="Permalink to &quot;Registers&quot;">​</a></h1><p>寄存資料的地方。</p><h2 id="種類" tabindex="-1">種類 <a class="header-anchor" href="#種類" aria-label="Permalink to &quot;種類&quot;">​</a></h2><h3 id="無名-register" tabindex="-1">無名 Register (<code>&quot;&quot;</code>) <a class="header-anchor" href="#無名-register" aria-label="Permalink to &quot;無名 Register (`&quot;&quot;`)&quot;">​</a></h3><p>沒有指派時，都會使用此 Register 。 <code>x</code> <code>z</code> <code>d{motion}</code> <code>c{motion}</code> <code>y{motion}</code> 以及他們對應的大寫指令所剪下的字串都會放於此。</p><h3 id="複製專用-register-0" tabindex="-1">複製專用 Register (<code>&quot;0</code>) <a class="header-anchor" href="#複製專用-register-0" aria-label="Permalink to &quot;複製專用 Register (`&quot;0`)&quot;">​</a></h3><p><code>y{motion}</code> 所剪下的字串會儲存於此。</p><h3 id="有名-register-a-z" tabindex="-1">有名 Register (<code>&quot;{a-z}</code>) <a class="header-anchor" href="#有名-register-a-z" aria-label="Permalink to &quot;有名 Register (`&quot;{a-z}`)&quot;">​</a></h3><p>在做剪下的動作前，可以指定特定 Register 作為儲存地，例如： <code>&quot;ayy</code> 會將 <code>yy</code> 的資料放於 a register 中，之後可以使用 <code>&quot;ap</code> 將內容貼上。</p><h2 id="延伸閱讀" tabindex="-1">延伸閱讀 <a class="header-anchor" href="#延伸閱讀" aria-label="Permalink to &quot;延伸閱讀&quot;">​</a></h2><ul><li><a href="https://neovim.io/doc/user/usr_10.html#_using-registers" target="_blank" rel="noreferrer">USING REGISTERS | Usr_10 - Neovim docs</a></li></ul>',11),s=[i];function c(d,n,l,h,u,_){return r(),t("div",null,s)}const q=e(o,[["render",c]]);export{m as __pageData,q as default};
